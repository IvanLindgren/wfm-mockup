import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { Box, Typography, List, ListItem, ListItemText, Divider, Button } from '@mui/material';
import PrintIcon from '@mui/icons-material/Print';
import Header from '../components/Header';
import LoadingSpinner from '../components/LoadingSpinner';
import './ActViewScreen.bimbo.css';

function ActViewScreen({ generatedActs }) { // –ü–æ–ª—É—á–∞–µ–º "—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ" –∞–∫—Ç—ã
  const { naryadId } = useParams();
  const navigate = useNavigate();
  const [actData, setActData] = useState(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    setIsLoading(true);
    // –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∞–∫—Ç–∞
    const timer = setTimeout(() => {
        const foundAct = generatedActs[naryadId]; // –ò—â–µ–º –∞–∫—Ç –ø–æ ID –Ω–∞—Ä—è–¥–∞
        if (foundAct) {
            setActData(foundAct);
        } else {
             // –ï—Å–ª–∏ –∞–∫—Ç–∞ –Ω–µ—Ç, –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–Ω—É—Ç—å
             // –î–ª—è –¥–µ–º–æ –ø–æ–∫–∞–∂–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
             console.warn(`–ê–∫—Ç –¥–ª—è –Ω–∞—Ä—è–¥–∞ ${naryadId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ 'generatedActs'`);
        }
        setIsLoading(false);
    }, 300); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞

    return () => clearTimeout(timer);
  }, [naryadId, generatedActs]);

  const handlePrint = () => {
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—á–∞—Ç–∏ (window.print() –∏–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è PDF)
      alert('–ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—á–∞—Ç–∏ –∞–∫—Ç–∞...');
  }

  if (isLoading) {
      return (
          <>
              <Header title="–ó–∞–≥—Ä—É–∑–∫–∞ –ê–∫—Ç–∞..." />
              <LoadingSpinner />
          </>
      );
  }

  if (!actData) {
      return (
          <>
              <Header title="–ê–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω üò¢" />
              <Box className="act-bimbo-wrapper" style={{marginTop: 32}}>
                <Typography sx={{ mt: 2, color: '#ff3cab', fontWeight: 'bold', fontSize: '1.3em' }}>
                  üíî –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∞ –¥–ª—è –Ω–∞—Ä—è–¥–∞ <b>{naryadId}</b>.<br/> –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –µ—â–µ –Ω–µ –±—ã–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω.
                </Typography>
                <div className="act-bimbo-btns">
                  <button className="act-bimbo-btn" onClick={() => navigate(`/naryad/${naryadId}`)}>
                    üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Ä—è–¥—É
                  </button>
                </div>
              </Box>
          </>
      );
  }

  // –ï—Å–ª–∏ –∞–∫—Ç –Ω–∞–π–¥–µ–Ω, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –µ–≥–æ
  return (
    <>
      <Header title={`–ê–∫—Ç ‚Ññ ${actData.id} üíñ`} />
      <div className="act-bimbo-wrapper">
        <div className="act-bimbo-title">
          <span className="act-bimbo-emoji">üìÑ</span>
          –ê–∫—Ç –ü—Ä–∏–µ–º–∞-–ü–µ—Ä–µ–¥–∞—á–∏ <span role="img" aria-label="sparkles">‚ú®</span>
        </div>
        <div className="act-bimbo-info">
          <b>–ê–∫—Ç ‚Ññ:</b> <span style={{color:'#ff3cab'}}>{actData.id}</span><br/>
          <b>–ö –ù–∞—Ä—è–¥—É ‚Ññ:</b> <span style={{color:'#ff3cab'}}>{actData.naryadId}</span><br/>
          <b>–î–∞—Ç–∞:</b> {actData.date}
        </div>
        <div className="act-bimbo-info">
          <b>–ö–ª–∏–µ–Ω—Ç:</b> {actData.client}<br/>
          <b>–ê–¥—Ä–µ—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏:</b> {actData.address}
        </div>
        <div className="act-bimbo-info" style={{background:'#ffe0f7'}}>
          <b>–ü–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ:</b>
          <ul className="act-bimbo-list">
            {actData.equipment.map((eq, idx) => (
              <li key={eq.id}>
                <span className="act-bimbo-emoji">üíÖ</span> {idx + 1}. <b>{eq.type}</b> ‚Äî {eq.model} <span style={{color:'#ff69b4'}}>({eq.id})</span>
              </li>
            ))}
          </ul>
        </div>
        <div className="act-bimbo-info" style={{background:'#fff0fa'}}>
          <b>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</b> ___________________ <span className="act-bimbo-emoji">üë©‚Äçüîß</span><br/>
          <b>–ö–ª–∏–µ–Ω—Ç:</b> ___________________ / {actData.client} / <span className="act-bimbo-emoji">üëõ</span>
        </div>
        <div className="act-bimbo-btns">
          <button className="act-bimbo-btn" onClick={handlePrint}>
            üñ®Ô∏è –ü–µ—á–∞—Ç—å
          </button>
          <button className="act-bimbo-btn" onClick={() => navigate(`/naryad/${actData.naryadId}`)}>
            üîô –ö –Ω–∞—Ä—è–¥—É
          </button>
        </div>
      </div>
    </>
  );
}

export default ActViewScreen;